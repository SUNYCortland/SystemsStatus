@using SystemsStatus.Core.Data.Entities
@using SystemsStatus.Core.Data.Entities.Statuses
@using SystemsStatus.Web.Areas.Admin.ViewModels
@using SystemsStatus.Web.Extensions
@model ServicesChangeStatusViewModel
@{
    ViewBag.Title = "Add Status - Systems Status - SUNY Cortland";
    Layout = "~/Areas/Admin/Views/Shared/_MasterLayout.cshtml";
    ViewBag.DashboardMenuActive = "Services";
    ViewBag.DashboardSubMenuActive = "Change Status";
}

<ol class="breadcrumb" style="margin-top: 10px;">
    <li>
        <a href="@Url.Action("Index", new { controller = "Home" })">Home</a>
    </li>
    <li>
        <a href="@Url.Action("Index", new { controller = "Services" })">Services</a>
    </li>
    <li class="active">Change Status</li>
</ol>
<h1>Change Status</h1>
<p>
    Select a status type and fill out the following form. Select which services you want to apply this status to and click 'Change Status'.
</p>
@using (Html.BeginForm())
{
<div class="row">
    <div class="col-lg-6">
        <fieldset>
            <legend>
                Status Details<span id="statusDetailsLoading" class="pull-right hidden"><img src="@Url.Content("~/Images/ajax_loader.gif")" alt="Loading..." /></span>
            </legend>
            <div class="form-horizontal">
                <div class="form-group">
                    <label for="ddlStatusTypes" class="col-lg-3">Status Type<span class="required"> *</span></label>
                    <div class="col-lg-9">
                        <select id="ddlStatusTypes" name="StatusType" class="form-control">
                            <option value="online" @(String.IsNullOrWhiteSpace(Model.StatusType) || Model.StatusType == "online" ? "selected='selected'" : "")>Online</option>
                            <option value="offline" @(Model.StatusType == "offline" ? "selected='selected'" : "")>Down</option>
                            <option value="offlineMaintenance" @(Model.StatusType == "offlineMaintenance" ? "selected='selected'" : "")>Maintenance</option>
                            <option value="onlineDegraded" @(Model.StatusType == "onlineDegraded" ? "selected='selected'" : "")>Degraded</option>
                        </select>
                    </div>
                </div>
                <section id="serviceStatus">
                    @if (String.IsNullOrWhiteSpace(Model.StatusType) || Model.StatusType == "online")
                    {
                        @Html.Partial("_ChangeStatus_OnlineServiceStatus", Model)
                    }
                    else if (Model.StatusType == "offline")
                    {
                        @Html.Partial("_ChangeStatus_OfflineUnplannedServiceStatus", Model)
                    }
                    else if (Model.StatusType == "offlineMaintenance")
                    {   
                        @Html.Partial("_ChangeStatus_OfflineMaintenanceServiceStatus", Model)
                    }
                    else if (Model.StatusType == "onlineDegraded")
                    {   
                        @Html.Partial("_ChangeStatus_OnlineDegradedServiceStatus", Model)
                    }
                </section>
            </div>
        </fieldset>
    </div>
    <div class="col-lg-6">
        <fieldset>
            <legend>
                Select Services
            </legend>
        </fieldset>
        <div class="row" style="margin-bottom: 10px;">
            <div class="col-lg-6"></div>
            <div class="col-lg-6">
                <div class="pull-right">
                    <div class="input-group" style="margin-bottom: 10px;">
                        <input type="text" id="txtSearchServices" class="form-control input-sm" placeholder="Search services..." />
                        <span class="input-group-btn">
                            <button id="btnClearSearch" class="btn btn-danger btn-sm" type="button">
                                <span class="glyphicon glyphicon-remove"></span>
                            </button>
                        </span>
                    </div>
                </div>                
            </div>
            <div class="col-lg-12">
                <div class="pull-right">
                    <strong>Filter: </strong>
                    <a href="#" class="btnFilterServices label label-default label-lg">all</a>
                    <a href="#" class="btnFilterServices label label-success">online</a>
                    <a href="#" class="btnFilterServices label label-primary">maintenance</a>
                    <a href="#" class="btnFilterServices label label-warning">degraded</a>
                    <a href="#" class="btnFilterServices label label-danger">down</a>
                </div>
            </div>
        </div>
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelForRequired(x => x.Services, new { @class = "col-lg-3" })
                <div id="servicesDropdownList" class="col-lg-9">
                    @Html.ListBoxFor(x => x.ServiceIds, Model.Services.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.Value.ToString() }), new { @class = "form-control", style = "height: 200px" })
                    @Html.ValidationMessageFor(x => x.ServiceIds)
                </div>
            </div>
        </div>
    </div>
</div>
<center>
    <span class="required">*</span> indicates a required field
</center>
<hr />
<div class="row" style="margin-top: 20px;">
    <div class="col-lg-12">
        <div class="well well-sm" style="overflow: auto;">
            <input type="button" class="btn btn-default pull-left" onclick="window.history.back()" value="Cancel" />
            <input type="submit" class="btn btn-success pull-right" value="Change Status" />
        </div>
    </div>
</div>
}
@section scripts
{
    @System.Web.Optimization.Scripts.Render("~/bundles/js/jquery-ui")
    <script src="@Url.Content("~/Areas/Admin/Scripts/jquery.ui.timepicker.addon.js")" type="text/javascript"></script>
    <script type="text/javascript">
        function InitializeDateTimePicker () {
            $(".datepicker").datetimepicker({
                timeFormat: "hh:mm tt",
                changeMonth: true,
                changeYear: true
            });
        }

        function ShowThrobber(elementId) {
            $("#" + elementId).removeClass("hidden");   
        }

        function HideThrobber(elementId) {
            $("#" + elementId).addClass("hidden");
        }

        function UpdateServiceListDropdown(strQuery, strServiceStatus) {
            $("#ServiceIds").attr("disabled", true);

            $.getJSON("@Url.Action("GetServicesSelectList")", { filter: strServiceStatus, query: strQuery }, function (services) {
                var servicesSelect = $("#ServiceIds");

                servicesSelect.empty();

                $.each(services, function (index, service) {
                    servicesSelect.append($('<option/>', {
                        value: service.value,
                        text: service.text
                    }));
                });

                $("#ServiceIds").attr("disabled", false);
            });
        }

        $(document).ready(function () {
            $("#txtSearchServices").on("keyup", function(){
                var strQuery = $(this).val();
                var strServiceStatus = $(".label-lg").html();

                UpdateServiceListDropdown(strQuery, strServiceStatus);
            });

            $(".btnFilterServices").on("click", function (e) {
                e.preventDefault();

                var strServiceStatus = $(this).html();
                var strQuery = $("#txtSearchServices").val();

                $(".btnFilterServices").each(function (index, filterButton){
                    $(filterButton).removeClass("label-lg");
                });

                $(this).addClass("label-lg");
               
                UpdateServiceListDropdown(strQuery, strServiceStatus);
            });

            $("#btnClearSearch").on("click", function (e) {
                e.preventDefault();

                $("#txtSearchServices").val("");

                $(".btnFilterServices").each(function (index, filterButton){
                    if($(filterButton).html() == "all")
                        $(filterButton).addClass("label-lg");
                    else
                        $(filterButton).removeClass("label-lg");
                });

                UpdateServiceListDropdown(null, null);
            });

            $("#ddlStatusTypes").on("change", function () {
                var ServiceStatusType = $("#ddlStatusTypes option:selected").val();

                ShowThrobber("statusDetailsLoading");

                $.ajaxRequest(
                    "@Url.Action("GetAddStatusForm")",
                    "POST",
                    JSON.stringify({ ServiceStatusType: ServiceStatusType }),
                    function (html) {
                        $("#serviceStatus").html(html);
                        HideThrobber("statusDetailsLoading");

                        InitializeDateTimePicker();
                    },
                    function () {}
                );
            });

            InitializeDateTimePicker();
        });
    </script>
}
@section styles
{
    @System.Web.Optimization.Styles.Render("~/bundles/css/jquery-ui")
    <link rel="Stylesheet" href="@Url.Content("~/Areas/Admin/Content/timepicker.css")" />
}